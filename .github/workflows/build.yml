名称：Build
开：[推，pull_request]
工作：
建：
运行时间：${{ matrix.os }}
策略：
fail-fast：假
矩阵：
操作系统： [Windows-Latest]
build_type：[发布]
enable_ui：[开]
包括：
- 操作系统： Windows-Latest
build_type：发布
enable_ui：开
步骤：
- 用途：动作/checkout@v3
跟：
子模块： 'recursive'
- 名称：Catch
用途：Hendrikmuhs/CCache-action@v1
if： runner.os == 'Linux'
跟：
键：${{ matrix.os }}-${{ matrix.enable_ui }}
- 用途：seanmiddleditch/gha-setup-ninja@master
- 用途：ILAMMY/MSVC-DEV-cmd@v1
if： runner.os == 'Windows'
- name： 安装依赖
壳牌：bash
运行： |
if [[ “${{ runner.os }}” == “Linux” ]] ;然后
sudo apt-get 更新 -qq
sudo apt-get 安装 -y \
libx11-dev libxcursor-dev libxi-dev
fi
- name： 生成 Makefile
壳牌：bash
运行： |
if [[ “${{ runner.os }}” == “Windows” ]] ;然后
导出 enable_ccache=关闭
还
导出 enable_ccache=开
fi
curl -L https://github.com/blueloveTH/aseprite/releases/download/v0.01/skia.zip --输出skia.zip
7z x skia.zip
cmake -S .-B 构建 -G 忍者 \
-DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
-DENABLE_UI=${{ matrix.enable_ui }} \
-DENABLE_CCACHE=$enable_ccache \
-DLAF_BACKEND=斯基亚 \
-DSKIA_DIR=./skia \
-DSKIA_LIBRARY_DIR=./skia/out/Release-x64 \
-DSKIA_LIBRARY=./skia/out/Release-x64/skia.lib
- 名称：编译
壳牌：bash
运行： |
CD 构建 & 忍者
- 用途：actions/upload-artifact@v3
跟：
姓名：Asaprite
路径： |
D：/a/aseprite/aseprite/build/bin/data
D：/a/无菌/无菌/无菌/构建/bin/aseprite.exe
